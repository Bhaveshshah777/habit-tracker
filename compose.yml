services:
  kafka:
    image: bitnami/kafka:4.0.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_KRAFT_CLUSTER_ID=kraft-cluster-id-123
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    volumes:
      - kafka-data:/bitnami/kafka
    networks:
      - habit-net
    healthcheck:
      test:
        [
          "CMD",
          "kafka-topics.sh",
          "--bootstrap-server",
          "localhost:9092",
          "--list",
        ]
      interval: 10s
      timeout: 10s
      retries: 5

  kafka-topic-creator:
    build: ./kafka-topic-creator
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BOOTSTRAP_SERVERS}
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - habit-net

  postgres:
    image: postgres:17
    restart: none
    container_name: habit-db
    environment:
      POSTGRES_USER: habituser
      POSTGRES_PASSWORD: habitpass
      POSTGRES_DB: habitdb
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - habit-net
    ports:
      - "5432:5432"

  migration-service:
    build: ./migration-service
    container_name: migration-container
    environment:
      - POSTGRES_CONNECTION=${POSTGRES_CONNECTION}
    depends_on:
      - postgres
    networks:
      - habit-net

  gateway:
    build: ./gateway
    container_name: gateway-container
    ports:
      - "7110:443"
    environment:
      - ASPNETCORE_URLS=https://+:443
      - ASPNETCORE_FORWARDEDHEADERS_ENABLED=true
      - POSTGRES_CONNECTION=${POSTGRES_CONNECTION}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - REDIS_CONNECTION=${REDIS_CONNECTION}
    depends_on:
      - migration-service
    networks:
      - habit-net
    volumes:
      - ./gateway/certs/localhost.p12:/https/localhost.p12:ro

  habit-service:
    build: ./habit-service
    container_name: habit-container
    ports:
      - "5167:80"
    environment:
      - ASPNETCORE_URLS=http://+:80
      - POSTGRES_CONNECTION=${POSTGRES_CONNECTION}
      - KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BOOTSTRAP_SERVERS}
    depends_on:
      - migration-service
    networks:
      - habit-net

  tracking-service:
    build: ./tracking-service
    container_name: tracking-container
    ports:
      - "5151:80"
    environment:
      - ASPNETCORE_URLS=http://+:80
      - POSTGRES_CONNECTION=${POSTGRES_CONNECTION}
    depends_on:
      - migration-service
    networks:
      - habit-net

  user-service:
    build: ./user-service
    container_name: user-container
    ports:
      - "5272:80"
    environment:
      - ASPNETCORE_URLS=http://+:80
      - POSTGRES_CONNECTION=${POSTGRES_CONNECTION}
      - KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BOOTSTRAP_SERVERS}
    depends_on:
      kafka:
        condition: service_healthy
      migration-service:
        condition: service_started
    networks:
      - habit-net

  notification-service:
    build: ./notification-service
    container_name: notification-container
    ports:
      - "5245:80"
    environment:
      - ASPNETCORE_URLS=http://+:80
      - POSTGRES_CONNECTION=${POSTGRES_CONNECTION}
      - KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BOOTSTRAP_SERVERS}
    depends_on:
      - migration-service
      - kafka-topic-creator
    networks:
      - habit-net

  redis:
    image: redis:8.0.1-alpine
    container_name: redis
    networks:
      - habit-net
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

networks:
  habit-net:
    driver: bridge

volumes:
  pgdata:
  redis_data:
  kafka-data:
